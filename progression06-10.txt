///// Week 06 //////

โค้ดนี้ใช้ array และ object เป็นหลัก เริ่มจากการประกาศตัวแปร quotes ที่เก็บข้อมูลทั้งหมดในรูปแบบของอาเรย์ ซึ่งในตอนแรกยังเป็นอาเรย์ว่าง 
แต่สามารถเพิ่ม ลบ และแก้ไขได้ตลอดเวลา เพื่อให้ทำงานได้สะดวก จึงมีการสร้างฟังก์ชันขึ้นมาหลายตัว ฟังก์ชันแรกคือ addQuote 
มีหน้าที่รับอ็อบเจ็กต์ที่ประกอบด้วย id, content, และ author แล้วใส่เข้าไปในอาเรย์ quotes โดยใช้คำสั่ง push การทำงานนี้เป็นการเพิ่มสมาชิกใหม่เข้าไปที่ท้ายอาเรย์ทันที 
ฟังก์ชันถัดมาคือ deleteQuote ใช้เพื่อลบคำคมที่ไม่ต้องการออกจากอาเรย์ หลักการคือค้นหาดัชนีของอ็อบเจ็กต์ที่มี id ตรงกับที่ส่งเข้ามา ด้วย findIndex 
ถ้าพบจะใช้ splice เพื่อตัดออกจากอาเรย์ ซึ่งเป็นการแก้ไขข้อมูลในตัวแปร quotes โดยตรง สำหรับการแก้ไขข้อมูลที่มีอยู่แล้ว 
ใช้ฟังก์ชัน updateQuote ที่รับ id ของคำคม และอ็อบเจ็กต์ใหม่ที่มีเนื้อหาหรือผู้เขียนใหม่ ฟังก์ชันจะค้นหาอ็อบเจ็กต์ที่มี id ตรงกันด้วย find 
แล้วถ้าเจอจะอัปเดตค่าของ content หรือ author ตามข้อมูลที่ส่งเข้ามา วิธีนี้ช่วยให้สามารถแก้ไขบางส่วนได้ โดยไม่ต้องสร้างอ็อบเจ็กต์ใหม่ทั้งหมด 
ส่วนการดึงข้อมูลทั้งหมดออกมาใช้ฟังก์ชัน getAllQuotes ซึ่งคืนค่าอาเรย์ quotes ทั้งหมด ทำให้เห็นภาพรวมของข้อมูลในระบบ

ประโยชน์ที่จากการฝึก Practice
การฝึก Practice ช่วยให้เราเข้าใจหลักการเขียนโค้ดได้ชัดเจนขึ้นจากการลงมือทำจริงช่วยพัฒนาทักษะการแก้ปัญหาและการคิดเป็นลำดับขั้นตอนอย่างเป็นระบบ
ทำให้เกิดความคุ้นเคยและมั่นใจในการประยุกต์ใช้ความรู้ในสถานการณ์จริงได้ดียิ่งขึ้น

------------------------------------------------------------------------------------------------------------------------------------------------

///// Week 07 //////

เริ่มจากโจทย์แรก การเปลี่ยนข้อความบนหน้าเว็บเมื่อกดปุ่ม เป็นการเข้าถึง element ด้วย getElementById และการแก้ไขข้อความด้วย textContent 
จะส่งผลให้หน้าเว็บเปลี่ยนทันทีโดยไม่ต้องรีเฟรช ต่อมาในโจทย์การเพิ่มรายการใน list เมื่อกดปุ่ม โดย createElement และ appendChild 
ซึ่งทำให้เข้าใจการสร้าง node ใหม่และการเชื่อมเข้ากับต้นไม้ DOM เพื่อสร้างเนื้อหาแบบ dynamic โจทย์ที่สามว่าด้วยการซ่อนและแสดงข้อความผ่านปุ่ม toggle 
เน้นการจัดการ style ของ element โดยตรงผ่าน style.display หรือการสลับ class และต่อไป โจทย์การนับจำนวนครั้งที่กดปุ่มเพื่อแสดงผลการเปลี่ยนแปลงนั้นแบบ 
real-time โจทย์สุดท้ายเกี่ยวกับการใช้ prompt() เพื่อรับข้อมูลจากผู้ใช้แล้วนำมาแสดงผล เป็นการผสมผสานการทำงานของ system dialog เข้ากับ DOM manipulation 

ประโยชน์ที่จากการฝึก Practice
การฝึก DOM ช่วยให้เข้าใจการเข้าถึงและแก้ไขโครงสร้างของหน้าเว็บได้จริง รู้จักวิธีสร้าง ลบ และเปลี่ยนแปลง element อย่างเป็นระบบ 
สามารถควบคุมการแสดงผลและโต้ตอบกับผู้ใช้ได้อย่างมีประสิทธิภาพ

------------------------------------------------------------------------------------------------------------------------------------------------

///// Week 08 //////

ผมได้ฝึกการจัดการ DOM ด้วย JavaScript โดยผมได้เชื่อมไฟล์ quote.js กับ ui.js ใน ui.js โจทย์ได้เลือก <div id="quote-list"> เพื่อเป็นพื้นที่แสดงผล quotes
เขียนฟังก์ชัน addNewQuote(content, author) เป็น wrapper ของ addQuote() เพื่อเพิ่ม quotes เริ่มต้น จะเรียกโดย
ใช้ addNewQuote หรือ addQuote ก็ได้ จากนั้นเขียน renderQuotes() เพื่อเคลียร์ div และวนลูปสร้าง <p> สำหรับแต่ละ quote
ข้อความแต่ละ quote จะแสดงในรูปแบบ "content" — author และได้เพิ่ม quotes เริ่มต้น 3 อัน คือ Steve Jobs, Yoda และ Leonardo da Vinci ตามที่โจทย์กำหนด
และสุดท้ายเรียก renderQuotes() เพื่อแสดงผล quotes ทั้งหมดบนหน้าเว็บ


ประโยชน์ที่จากการฝึก Practice
การฝึกครั้งนี้ช่วยฝึกให้เข้าใจการจัดการ DOM ด้วย JavaScript และการเชื่อมข้อมูลจากโค้ด logic เข้ากับหน้าเว็บจริง
ช่วยให้เรียนรู้การสร้าง element ใหม่ แก้ไขเนื้อหา และแสดงข้อมูลแบบ dynamic อีกด้วย

------------------------------------------------------------------------------------------------------------------------------------------------

///// Week 09 //////

สิ่งที่ืทำวันนี้ โดยเริ่มจากการสร้างตัวแปร quotes เป็น array เพื่อเก็บข้อมูลคำคมทั้งหมด พร้อมตัวแปร nextId สำหรับกำหนดรหัสเฉพาะของแต่ละคำคม จากนั้นจึงเขียนฟังก์ชัน addQuote เพื่อเพิ่มคำคมใหม่เข้าไปใน array และคืนค่าคำคมที่เพิ่ม
สำหรับการแก้ไขคำคม มีฟังก์ชัน updateQuote ที่ค้นหาคำคมตามรหัสและปรับปรุงข้อความและผู้แต่ง ส่วนการลบคำคมจะใช้ฟังก์ชัน deleteQuote เพื่อลบคำคมออกจาก array และสามารถดึงข้อมูลทั้งหมดด้วยฟังก์ชัน getAllQuotes
และมีการเชื่อมต่อกับหน้าเว็บโดยการเลือกองค์ประกอบใน DOM เช่น quote-list สำหรับแสดงคำคม, form สำหรับเพิ่มหรือแก้ไขคำคม, และปุ่ม randomBtn สำหรับแสดงคำคมสุ่ม โดยสร้างฟังก์ชัน createQuoteElement เพื่อสร้าง <div> แต่ละคำคมพร้อมปุ่ม Edit 
และ Delete ซึ่งปุ่ม Edit จะนำข้อมูลกลับไปกรอกในฟอร์มและสามารถแก้ไขได้ด้วย ส่วนปุ่ม Delete จะลบคำคมจากทั้ง array และ DOM ฟังก์ชัน renderQuotes จะล้างและแสดงคำคมทั้งหมดใหม่ทุกครั้งที่มีการเพิ่ม แก้ไข หรือ ลบ 
และฟังก์ชัน showRandomQuote จะสุ่มเลือกคำคมมาแสดงในหน้าจอ

ประโยชน์ที่จากการฝึก Practice
การฝึกทำโปรแกรม Quote Manager รอบนี้นี้ช่วยให้เข้าใจการจัดการข้อมูลด้วย array และการสร้างฟังก์ชันสำหรับเพิ่ม แก้ไข และลบข้อมูล
และ ช่วยพัฒนาทักษะการใช้ Event Listener 

------------------------------------------------------------------------------------------------------------------------------------------------

///// Week 10 //////

วันนี้ได้อัปเกรดแอป Quote Manager ให้สามารถจดจำข้อมูลคำคมไว้ได้ แม้จะปิดหรือรีเฟรชเบราว์เซอร์ไปแล้วก็ตาม โดยเราได้ใช้ localStorage ซึ่งเป็นพื้นที่เก็บข้อมูลในตัวเบราว์เซอร์เป็นที่เก็บข้อมูล
โจทย์หลักคือการแก้ไขไฟล์ quote.js ซึ่งเดิมทีเก็บอาร์เรย์ quotes ไว้เป็นการส่วนตัว เราจึงได้เพิ่มฟังก์ชัน setQuotes เข้าไปใหม่ เพื่อให้ไฟล์ UI สามารถส่งข้อมูลที่โหลดมาจาก localStorage กลับเข้าไปอัปเดตในโมดูล quote.js ได้
จากนั้น ในไฟล์ ui.js เราได้เติมโค้ดในฟังก์ชัน loadQuotes และ saveQuotes
ฟังก์ชัน loadQuotes จะถูกเรียกตอนเปิดหน้าเว็บ มันจะอ่านข้อมูลจาก localStorage, แปลงข้อมูล (parse) กลับมาเป็นอาร์เรย์, แล้วใช้ setQuotes ที่เราเพิ่งสร้างเพื่อตั้งค่าข้อมูลเริ่มต้น
ส่วนฟังก์ชัน saveQuotes จะทำการแปลงอาร์เรย์ quotes ปัจจุบันให้เป็น JSON string แล้วบันทึกลง localStorage
เพื่อให้ข้อมูลอัปเดตอยู่เสมอ เราได้เรียกใช้ saveQuotes ทุกครั้งที่มีการ "เพิ่ม" "แก้ไข" (ใน form.addEventListener) หรือ "ลบ" คำคม (ใน addEditDeleteButton)
สุดท้าย เราสั่งให้ loadQuotes() ทำงานก่อน renderQuotes() ตอนที่หน้าเว็บโหลด ผลลัพธ์คือ ตอนนี้แอปสามารถโหลดคำคมเก่าที่เคยบันทึกไว้ขึ้นมาแสดงผลได้ทันทีที่เปิดหน้าเว็บ และทุกการเปลี่ยนแปลงก็จะถูกบันทึกไว้สำหรับครั้งถัดไปครับ

ประโยชน์ที่จากการฝึก Practice
การฝึกฝนช่วยให้ทำสิ่งต่างๆ ได้อย่างชำนาญและคล่องแคล่วมากขึ้น มันช่วยตอกย้ำความรู้และสร้างความจำระยะยาว ทำให้เรามั่นใจและสามารถแก้ปัญหาเฉพาะหน้าได้ดีขึ้นเมื่อต้องลงมือทำจริง

------------------------------------------------------------------------------------------------------------------------------------------------